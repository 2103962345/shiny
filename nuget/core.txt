

1. Create a Startup file in your core/abstraction/.NET standard

public class YourStartup : Shiny.Startup
{
    public override void ConfigureServices(IServiceCollection services)
    {
    }
}



ANDROID

1. Create an application in your android head project

using System;
using Shiny;
using Android.App;
using Android.Runtime;


[Application]
public class YourApplication : Application
{
    public YourApplication(IntPtr handle, JniHandleOwnership transfer) : base(handle, transfer)
    {
    }


    public override void OnCreate()
    {
        base.OnCreate();
        AndroidShinyHost.Init(new Startup(), services => {
            // register any platform specific stuff you need here
        });
    }
}




2. In your main activity (or every activity where you are going to ask for permissions)

public override void OnRequestPermissionsResult(int requestCode, string[] permissions, Permission[] grantResults)
    => AndroidShinyHost.OnRequestPermissionsResult(requestCode, permissions, grantResults);


IOS

Info.plist
<key>UIBackgroundModes</key>
<array>
	<string>fetch</string>
</array>

AppDelegate.cs
Shiny.iOSShinyHost.Init(new YourStartup());

public override void PerformFetch(UIApplication application, Action<UIBackgroundFetchResult> completionHandler)
    => Shiny.Jobs.JobManager.OnBackgroundFetch(completionHandler);


UWP
In App.xaml.cs
UwpShinyHost.Init(new YourStartup());


Register the following in your mainfest
<Extensions>
    <Extension Category="windows.backgroundTasks" EntryPoint="Shiny.Support.Uwp.ShinyBackgroundTask">
        <BackgroundTasks>
            <Task Type="bluetooth"/>
            <Task Type="deviceConnectionChange"/>
            <Task Type="deviceServicing"/>
            <Task Type="deviceUse"/>
            <Task Type="general"/>
            <Task Type="location"/>
            <Task Type="systemEvent"/>
            <Task Type="timer"/>
        </BackgroundTasks>
    </Extension>
</Extensions>